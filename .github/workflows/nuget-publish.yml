name: Publish NuGet Package

on:
  push:
    branches:
      - nuget

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Get latest Git tag
        id: get_tag
        run: |
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1) || echo "0.0.0")
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Update version in .csproj
        run: |
          VERSION=${{ env.TAG }}
          # Use sed to replace the <Version> value in the .csproj file
          sed -i 's|<Version>.*</Version>|<Version>'"$VERSION"'</Version>|' HGO.ASPNetCore.FileManager.csproj
        shell: bash

      - name: Create new Git tag if none exists
        run: |
          if [ "${{ env.TAG }}" == "0.0.0" ]; then
            VERSION=$(grep -oP '(?<=<Version>).*?(?=</Version>)' YourProject.csproj)
            git tag "$VERSION"
            git push origin "$VERSION"
          fi

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Pack
        run: dotnet pack --configuration Release --output ./output

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push ./output/*.nupkg -s https://api.nuget.org/v3/index.json -k $NUGET_API_KEY

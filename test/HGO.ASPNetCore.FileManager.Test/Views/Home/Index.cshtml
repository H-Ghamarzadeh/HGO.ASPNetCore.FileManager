@using HGO.ASPNetCore.FileManager.Enums
@using HGO.ASPNetCore.FileManager.Models.LangugageModels.BuiltIn
@using HGO.ASPNetCore.FileManager.ViewComponentsModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">HGO ASP.Net Core File Manager Example</h1>
    <div style="height: 550px; margin-bottom:20px">
        @await Component.InvokeAsync("FileManagerComponent", new FileManagerModel()
   {
       Id = "FM1",
       RootFolder = AppDomain.CurrentDomain.BaseDirectory,
       ApiEndPoint = Url.Action("HgoApi"),
       Config = new FileManagerConfig()
       {
        DisabledFunctions = new HashSet<Command>(){
            Command.Delete,
        },
        Language = new TurkishLanguage(),

       }
   })
    </div>

    <button onclick="getSelectedItems('file')" class="btn btn-success">Get Selected Files</button>
    <button onclick="getSelectedItems('folder')" class="btn btn-success">Get Selected Folders</button>
    <button onclick="AddNewItemToContextMenu()" class="btn btn-success">Add New Item To Context Menu</button>
    <button onclick="AddNewButtonToMenu()" class="btn btn-success">Add New Button To Menu</button>

    <script>
        function getSelectedItems(itemType) {
            let fileManager = HgoFileManager.selectById("FM1");
            let selections = fileManager.getSelectedItemsPath(itemType);
            if (selections && selections.length > 0) {
                alert(selections);
            }
            else {
                fileManager.showToastify("Please select an item");
            }
        }

        function AddNewButtonToMenu() {
            let fileManager = HgoFileManager.selectById("FM1");
            fileManager.addButtonToMenu("Open 'refs' Folder", (e) => fileManager.getFolderContent('Root\\refs'));
            alert('New button has been added to menu!');
        }

        function AddNewItemToContextMenu() {
            let fileManager = HgoFileManager.selectById("FM1");
            fileManager.contextMenu.items.push({ text: 'Hello', onclick: (e) => alert('Hello!') });
            alert('New item has been added to context menu!');
        }
    </script>
</div>
